syntax = "proto3";

package article.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "api/article/service/v1;v1";

service Article {

    rpc ListArticles (ListArticlesRequest) returns (MultipleArticlesReply) {
        option (google.api.http) = {
            get: "/api/articles",
        };
    }

    rpc FeedArticles (FeedArticlesRequest) returns (MultipleArticlesReply) {
        option (google.api.http) = {
            get: "/api/articles/feed",
        };
    }

    rpc GetArticle (GetArticleRequest) returns (SingleArticleReply) {
        option (google.api.http) = {
            get: "/api/articles/{slug}",
        };
    }

    rpc CreateArticle (CreateArticleRequest) returns (SingleArticleReply) {
        option (google.api.http) = {
            post: "/api/articles",
            body: "*",
        };
    }

    rpc UpdateArticle (UpdateArticleRequest) returns (SingleArticleReply) {
        option (google.api.http) = {
            put: "/api/articles/{slug}",
            body: "*",
        };
    }

    rpc DeleteArticle (DeleteArticleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/articles/{slug}",
        };
    }

    rpc AddComment (AddCommentRequest) returns (SingleCommentReply) {
        option (google.api.http) = {
            post: "/api/articles/{slug}/comments",
            body: "*",
        };
    }

    rpc GetComments (GetCommentsRequest) returns (MultipleCommentsReply) {
        option (google.api.http) = {
            get: "/api/articles/{slug}/comments",
        };
    }

    rpc DeleteComment (DeleteCommentRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/articles/{slug}/comments/{id}",
        };
    }

    rpc FavoriteArticle (FavoriteArticleRequest) returns (SingleArticleReply) {
        option (google.api.http) = {
            post: "/api/articles/{slug}/favorite",
            body: "*",
        };
    }

    rpc UnfavoriteArticle (UnfavoriteArticleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/api/articles/{slug}/favorite",
        };
    }

    rpc GetTags (google.protobuf.Empty) returns (TagListReply) {
        option (google.api.http) = {
            get: "/api/tags",
        };
    }
}

message Author {
    string username = 1;
    string bio = 2;
    string image = 3;
    bool following = 4;
}

message ArticleDTO {
    string slug = 1;
    string title = 2;
    string description = 3;
    string body = 4;
    repeated string tagList = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
    bool favorited = 8;
    int32 favoritesCount = 9;
    Author author = 10;
}

message SingleArticleReply {
    ArticleDTO article = 1;
}

message MultipleArticlesReply {
    repeated ArticleDTO articles = 1;
    int32 articlesCount = 2;
}

message Comment {
    uint64 id = 1;
    google.protobuf.Timestamp createdAt = 2;
    google.protobuf.Timestamp updatedAt = 3;
    string body = 4;
    Author author = 5;
}

message SingleCommentReply {
    Comment comment = 1;
}

message MultipleCommentsReply {
    repeated Comment comments = 1;
}

message TagListReply {
    repeated string tags = 1;
}

message ListArticlesRequest {
    string tag = 1;
    string author = 2;
    string favorited = 3;
    int32 limit = 4;
    int32 offset = 5;
}

message FeedArticlesRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message GetArticleRequest {
    string slug = 1;
}

message CreateArticleRequest {

    message Article {
        string title = 1;
        string description = 2;
        string body = 3;
        repeated string tagList = 4;
    }

    Article article = 1;
}

message UpdateArticleRequest {

    message Article {
        string title = 1;
        string description = 2;
        string body = 3;
        repeated string tagList = 4;
    }

    Article article = 1;
    string slug = 2;
}

message DeleteArticleRequest {
    string slug = 1;
}

message AddCommentRequest {
    message Comment {
        string body = 1;
    }

    Comment comment = 1;
    string slug = 2;
}

message GetCommentsRequest {
    string slug = 1;
}

message DeleteCommentRequest {
    string slug = 1;
    uint64 id = 2;
}

message FavoriteArticleRequest {
    string slug = 1;
}

message UnfavoriteArticleRequest {
    string slug = 1;
}